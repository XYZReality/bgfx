# GNU Make project makefile autogenerated by GENie

.SUFFIXES:

ifndef config
  config=debug32
endif

ifndef verbose
  SILENT = @
endif

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(MAKESHELL)))
  SHELLTYPE := posix
endif

ifeq (posix,$(SHELLTYPE))
  MKDIR = $(SILENT) mkdir -p "$(1)"
  COPY  = $(SILENT) cp -fR "$(1)" "$(2)"
  RM    = $(SILENT) rm -f "$(1)"
else
  MKDIR = $(SILENT) mkdir "$(subst /,\\,$(1))" 2> nul || exit 0
  COPY  = $(SILENT) copy /Y "$(subst /,\\,$(1))" "$(subst /,\\,$(2))"
  RM    = $(SILENT) del /F "$(subst /,\\,$(1))" 2> nul || exit 0
endif

CC  = gcc
CXX = g++
AR  = ar

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

MAKEFILE = texturev.make

ifeq ($(config),debug32)
  OBJDIR              = ../../orin/obj/x32/Debug/texturev
  TARGETDIR           = ../../orin/bin
  TARGET              = $(TARGETDIR)/texturevDebug
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DBX_CONFIG_DEBUG=1
  INCLUDES           += -I"../../../../bx/include/compat/linux" -I"../../../../../../../../opt/vc/include" -I"../../../../../../../../opt/vc/include/interface/vcos/pthreads" -I"../../../../../../../../opt/vc/include/interface/vmcs_host/linux" -I"../../../../bimg/include" -I"../../../include" -I"../../../3rdparty" -I"../../../examples/common" -I"../../../../bx/include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/orin" -L"../../../../../../../../opt/vc/lib" -L"." -L"../../orin/bin" -Wl,--gc-sections
  LIBDEPS            += ../../orin/bin/libexample-commonDebug.a ../../orin/bin/libbimg_decodeDebug.a ../../orin/bin/libbimgDebug.a ../../orin/bin/libbgfxDebug.a ../../orin/bin/libbxDebug.a
  LDDEPS             += ../../orin/bin/libexample-commonDebug.a ../../orin/bin/libbimg_decodeDebug.a ../../orin/bin/libbimgDebug.a ../../orin/bin/libbgfxDebug.a ../../orin/bin/libbxDebug.a
  LDRESP              =
  LIBS               += $(LDDEPS) -lrt -ldl -lX11 -lGL -lpthread
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/tools/texturev/texturev.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR              = ../../orin/obj/x32/Release/texturev
  TARGETDIR           = ../../orin/bin
  TARGET              = $(TARGETDIR)/texturevRelease
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG -DBX_CONFIG_DEBUG=0
  INCLUDES           += -I"../../../../bx/include/compat/linux" -I"../../../../../../../../opt/vc/include" -I"../../../../../../../../opt/vc/include/interface/vcos/pthreads" -I"../../../../../../../../opt/vc/include/interface/vmcs_host/linux" -I"../../../../bimg/include" -I"../../../include" -I"../../../3rdparty" -I"../../../examples/common" -I"../../../../bx/include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/orin" -L"../../../../../../../../opt/vc/lib" -L"." -L"../../orin/bin" -Wl,--gc-sections
  LIBDEPS            += ../../orin/bin/libexample-commonRelease.a ../../orin/bin/libbimg_decodeRelease.a ../../orin/bin/libbimgRelease.a ../../orin/bin/libbgfxRelease.a ../../orin/bin/libbxRelease.a
  LDDEPS             += ../../orin/bin/libexample-commonRelease.a ../../orin/bin/libbimg_decodeRelease.a ../../orin/bin/libbimgRelease.a ../../orin/bin/libbgfxRelease.a ../../orin/bin/libbxRelease.a
  LDRESP              =
  LIBS               += $(LDDEPS) -lrt -ldl -lX11 -lGL -lpthread
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/tools/texturev/texturev.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug64)
  OBJDIR              = ../../orin/obj/x64/Debug/texturev
  TARGETDIR           = ../../orin/bin
  TARGET              = $(TARGETDIR)/texturevDebug
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DBX_CONFIG_DEBUG=1
  INCLUDES           += -I"../../../../bx/include/compat/linux" -I"../../../../../../../../opt/vc/include" -I"../../../../../../../../opt/vc/include/interface/vcos/pthreads" -I"../../../../../../../../opt/vc/include/interface/vmcs_host/linux" -I"../../../../bimg/include" -I"../../../include" -I"../../../3rdparty" -I"../../../examples/common" -I"../../../../bx/include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/orin" -L"../../../../../../../../opt/vc/lib" -L"." -L"../../orin/bin" -Wl,--gc-sections
  LIBDEPS            += ../../orin/bin/libexample-commonDebug.a ../../orin/bin/libbimg_decodeDebug.a ../../orin/bin/libbimgDebug.a ../../orin/bin/libbgfxDebug.a ../../orin/bin/libbxDebug.a
  LDDEPS             += ../../orin/bin/libexample-commonDebug.a ../../orin/bin/libbimg_decodeDebug.a ../../orin/bin/libbimgDebug.a ../../orin/bin/libbgfxDebug.a ../../orin/bin/libbxDebug.a
  LDRESP              =
  LIBS               += $(LDDEPS) -lrt -ldl -lX11 -lGL -lpthread
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/tools/texturev/texturev.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR              = ../../orin/obj/x64/Release/texturev
  TARGETDIR           = ../../orin/bin
  TARGET              = $(TARGETDIR)/texturevRelease
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG -DBX_CONFIG_DEBUG=0
  INCLUDES           += -I"../../../../bx/include/compat/linux" -I"../../../../../../../../opt/vc/include" -I"../../../../../../../../opt/vc/include/interface/vcos/pthreads" -I"../../../../../../../../opt/vc/include/interface/vmcs_host/linux" -I"../../../../bimg/include" -I"../../../include" -I"../../../3rdparty" -I"../../../examples/common" -I"../../../../bx/include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/orin" -L"../../../../../../../../opt/vc/lib" -L"." -L"../../orin/bin" -Wl,--gc-sections
  LIBDEPS            += ../../orin/bin/libexample-commonRelease.a ../../orin/bin/libbimg_decodeRelease.a ../../orin/bin/libbimgRelease.a ../../orin/bin/libbgfxRelease.a ../../orin/bin/libbxRelease.a
  LDDEPS             += ../../orin/bin/libexample-commonRelease.a ../../orin/bin/libbimg_decodeRelease.a ../../orin/bin/libbimgRelease.a ../../orin/bin/libbgfxRelease.a ../../orin/bin/libbxRelease.a
  LDRESP              =
  LIBS               += $(LDDEPS) -lrt -ldl -lX11 -lGL -lpthread
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/tools/texturev/texturev.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug)
  OBJDIR              = ../../orin/obj/Debug/texturev
  TARGETDIR           = ../../orin/bin
  TARGET              = $(TARGETDIR)/texturevDebug
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DBX_CONFIG_DEBUG=1
  INCLUDES           += -I"../../../../bx/include/compat/linux" -I"../../../../../../../../opt/vc/include" -I"../../../../../../../../opt/vc/include/interface/vcos/pthreads" -I"../../../../../../../../opt/vc/include/interface/vmcs_host/linux" -I"../../../../bimg/include" -I"../../../include" -I"../../../3rdparty" -I"../../../examples/common" -I"../../../../bx/include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/orin" -L"../../../../../../../../opt/vc/lib" -L"." -L"../../orin/bin" -Wl,--gc-sections
  LIBDEPS            += ../../orin/bin/libexample-commonDebug.a ../../orin/bin/libbimg_decodeDebug.a ../../orin/bin/libbimgDebug.a ../../orin/bin/libbgfxDebug.a ../../orin/bin/libbxDebug.a
  LDDEPS             += ../../orin/bin/libexample-commonDebug.a ../../orin/bin/libbimg_decodeDebug.a ../../orin/bin/libbimgDebug.a ../../orin/bin/libbgfxDebug.a ../../orin/bin/libbxDebug.a
  LDRESP              =
  LIBS               += $(LDDEPS) -lrt -ldl -lX11 -lGL -lpthread
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/tools/texturev/texturev.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR              = ../../orin/obj/Release/texturev
  TARGETDIR           = ../../orin/bin
  TARGET              = $(TARGETDIR)/texturevRelease
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG -DBX_CONFIG_DEBUG=0
  INCLUDES           += -I"../../../../bx/include/compat/linux" -I"../../../../../../../../opt/vc/include" -I"../../../../../../../../opt/vc/include/interface/vcos/pthreads" -I"../../../../../../../../opt/vc/include/interface/vmcs_host/linux" -I"../../../../bimg/include" -I"../../../include" -I"../../../3rdparty" -I"../../../examples/common" -I"../../../../bx/include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fno-exceptions -Wunused-value -Wundef -march=armv8.2-a -mtune=cortex-a76 -fPIC -Wshadow
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/orin" -L"../../../../../../../../opt/vc/lib" -L"." -L"../../orin/bin" -Wl,--gc-sections
  LIBDEPS            += ../../orin/bin/libexample-commonRelease.a ../../orin/bin/libbimg_decodeRelease.a ../../orin/bin/libbimgRelease.a ../../orin/bin/libbgfxRelease.a ../../orin/bin/libbxRelease.a
  LDDEPS             += ../../orin/bin/libexample-commonRelease.a ../../orin/bin/libbimg_decodeRelease.a ../../orin/bin/libbimgRelease.a ../../orin/bin/libbgfxRelease.a ../../orin/bin/libbxRelease.a
  LDRESP              =
  LIBS               += $(LDDEPS) -lrt -ldl -lX11 -lGL -lpthread
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/tools/texturev/texturev.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJDIRS := \
	$(OBJDIR) \
	$(OBJDIR)/tools/texturev \

RESOURCES := \

.PHONY: clean prebuild prelink

all: $(OBJDIRS) $(TARGETDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LIBDEPS) $(EXTERNAL_LIBS) $(RESOURCES) $(OBJRESP) $(LDRESP) | $(TARGETDIR) $(OBJDIRS)
	@echo Linking texturev
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
	-$(call MKDIR,$(TARGETDIR))

$(OBJDIRS):
	@echo Creating $(@)
	-$(call MKDIR,$@)

clean:
	@echo Cleaning texturev
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) -x c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"

$(GCH_OBJC): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCPPFLAGS) -x objective-c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"
endif

ifneq (,$(OBJRESP))
$(OBJRESP): $(OBJECTS) | $(TARGETDIR) $(OBJDIRS)
	$(SILENT) echo $^
	$(SILENT) echo $^ > $@
endif

ifneq (,$(LDRESP))
$(LDRESP): $(LDDEPS) | $(TARGETDIR) $(OBJDIRS)
	$(SILENT) echo $^
	$(SILENT) echo $^ > $@
endif

$(OBJDIR)/tools/texturev/texturev.o: ../../../tools/texturev/texturev.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/tools/texturev
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
  -include $(OBJDIR)/$(notdir $(PCH))_objc.d
endif
